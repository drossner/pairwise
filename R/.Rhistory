install.packages("ggplot2")
install.packages("dplyr")
install.packages("hrbrthemes")
###Libraries
library(ggplot2)
library(dplyr)
library(hrbrthemes)
### import CSV-Files
sessions <- read.csv("Uni/Arbeit/pairwise/R/src/completedSessions.csv", sep = ",", fileEncoding = "UTF-8")
### import CSV-Files
sessions <- read.csv("src/completedSessions.csv", sep = ",", fileEncoding = "UTF-8")
singleSessions <- read.csv("src/singleSessions.csv", sep = ",", fileEncoding = "UTF-8")l
singleSessions <- read.csv("src/singleSessions.csv", sep = ",", fileEncoding = "UTF-8")l
singleSessions <- read.csv("src/singleSessions.csv", sep = ",", fileEncoding = "UTF-8")
### subsets für alle ersten, zweiten und dritten vergleiche
### für den Rest genauso vorgehen wie bei den anderen nur modulo anpassen
firstComparisons <- subset(singleSessions, 1:nrow(singleSessions)%%8==1)
secondComparisons <- subset(singleSessions, 1:nrow(singleSessions)%%8==2)
thirdComparisons <- subset(singleSessions, 1:nrow(singleSessions)%%8==3)
avg_duration_1 <- mean(firstComparisons$Duration)
avg_duration_2 <- mean(secondComparisons$Duration)
avg_duration_3 <- mean(thirdComparisons$Duration)
######################################################################
### Plot für die durchschnittliche Dauer pro Session als Barchart  ###
######################################################################
s = sessions$Session
avg_duration <- sessions$Avg.Duration
df <- data.frame(s, avg_duration)
df
p_col <- ggplot(data=df, aes(s, avg_duration))+
geom_col()+
xlab(NULL)+
ylab("Average Durations")+
coord_flip()
p_col
### Q-Q Plot, wenn die Punkte näherungsweise an der Linie sind dann liegt eine Normalverteilung vor
qqnorm(firstComparisons$Duration)
qqline(firstComparisons$Duration)
qqnorm(secondComparisons$Duration)
qqline(secondComparisons$Duration)
qqnorm(thirdComparisons$Duration)
qqline(thirdComparisons$Duration)
### Boxplot, Strich in der Mitte ist der Median, wenn dieser zentral in der Box liegt,
### liegt ebenfalls eine Normalverteilung vor
ggplot(data = firstComparisons) +
geom_boxplot(mapping = aes(y=firstComparisons$Duration)) +
ylab("Duration") +
ggtitle("Boxplot for the duration of all first comparisons") +
theme_ipsum()
ggplot(data = secondComparisons) +
geom_boxplot(mapping = aes(y=secondComparisons$Duration)) +
ylab("Duration") +
ggtitle("Boxplot for the duration of all second comparisons") +
theme_ipsum()
ggplot(data = thirdComparisons) +
geom_boxplot(mapping = aes(y=thirdComparisons$Duration)) +
ylab("Duration") +
ggtitle("Boxplot for the duration of all third comparisons") +
theme_ipsum()
### Shapiro Wilk Tests für die ersten, zweiten, dritten,... Vergleiche
### speziell für Datensätze zwischen 3 und 5000
### Hat eine gewissen Aussagekraft, allerdings ist bei größeren Werten der
### Solmogorow-Smirnow- oder Chi-Quadrat-Test besser geeignet
shapiro.test(firstComparisons$Duration)
shapiro.test(secondComparisons$Duration)
shapiro.test(thirdComparisons$Duration)
### DichteFunktion der jeweiligen Vergleiche, Glockenkurve zum Ablesen ob eine
### Normalverteilung vorliegt
plot(density(firstComparisons$Duration))
ggplot(data = firstComparisons, aes(x=firstComparisons$Duration)) +
geom_density(kernel = "gaussian") +
xlab("Duration") +
ggtitle("density of all first durations")
plot(density(secondComparisons$Duration))
ggplot(data = secondComparisons, aes(x=secondComparisons$Duration)) +
geom_density(kernel = "gaussian") +
xlab("Duration") +
ggtitle("density of all second durations")
plot(density(thirdComparisons$Duration))
ggplot(data = thirdComparisons, aes(x=thirdComparisons$Duration)) +
geom_density(kernel = "gaussian") +
xlab("Duration") +
ggtitle("density of all third durations")
### Das selbe nochmal nur für komplett alle Vergleiche
shapiro.test(singleSessions$Duration)
ggplot(data = singleSessions) + geom_boxplot(mapping = aes(y=singleSessions$Duration)) +
ylab("Duration") +
ggtitle("Boxplot of all durations")
qqnorm(singleSessions$Duration)
qqline(singleSessions$Duration)
plot(density(singleSessions$Duration))
